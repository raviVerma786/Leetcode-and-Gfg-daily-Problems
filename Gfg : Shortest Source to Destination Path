Question Link : https://practice.geeksforgeeks.org/problems/shortest-source-to-destination-path3544/1

Solution : 

// User function Template for C++

class Solution {
  public:
    bool isValid(int i,int j,int n,int m){
        return (i>=0 && j>=0 && i<n && j<m);
    }
    int shortestDistance(int N, int M, vector<vector<int>> A, int X, int Y) {

        // queue<i,j,steps>
        if(A[0][0] == 0 || A[X][Y]==0) return -1;
        queue<pair<int,pair<int,int>>> q;
        q.push({0,{0,0}});
        vector<vector<bool>> vis(N,vector<bool>(M,false));
        vis[0][0] = true;
        
        int row[4] = {-1,1,0,0};
        int col[4] = {0,0,1,-1};
        for(int i=0;i<N;i++){
            for(int j=0;j<M;j++){
                if(q.empty()) return -1;
                int r = q.front().first;
                int c = q.front().second.first;
                int steps = q.front().second.second;
                q.pop();
                
                if(r==X && c==Y) return steps;
                
                for(int k=0;k<4;k++){
                    if(isValid(r+row[k],c+col[k],N,M) && !vis[r + row[k]][c + col[k]] && A[r + row[k]][c + col[k]] == 1){
                    vis[r + row[k]][c + col[k]] = true;
                    q.push({r + row[k],{c + col[k],steps + 1}});
                }
                }
                
            }
            
        }
        return -1;
    }
};
