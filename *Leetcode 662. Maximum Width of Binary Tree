Question Link : https://leetcode.com/problems/maximum-width-of-binary-tree/description/

Solution : 

class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        int ans = 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            int size = q.size();
            long long min = q.front().second;
            long long first,last;
            for(int i=0;i<size;i++){
                long long curr_id = q.front().second - min;
                if(i==0) first = curr_id;
                if(i == size - 1) last = curr_id;
                if(q.front().first->left) q.push({q.front().first->left,curr_id*2 + 1});
                if(q.front().first->right) q.push({q.front().first->right,curr_id*2 + 2});
                q.pop();
            }
            ans = max(ans + 0LL,last - first + 1);
        }
        return ans;
    }
};
