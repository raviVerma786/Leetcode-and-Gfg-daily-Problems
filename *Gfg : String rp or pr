Question Link : https://practice.geeksforgeeks.org/problems/d25f415de2ff3e02134de03e17ad019d723ab2e9/1

Solution : 

class Solution{   
public:
    long long removePR(int X,string &S){
        stack<char>left,right;
        for(char ch : S){
            left.push(ch);
        }
    
        long long ans = 0;
        while(!left.empty()){
            char ch = left.top();
            left.pop();
            
            if(ch == 'r' && !left.empty() && left.top() == 'p') {
                ans += X;
                left.pop();
            }
            else if(ch == 'p' && !right.empty() && right.top() == 'r') {
                ans += X;
                right.pop();
            }
            else right.push(ch);
        }
        S = "";
        while(!right.empty()){
            S.push_back(right.top());
            right.pop();
        }
        return ans;
    }
    long long removeRP(int Y,string &S){
        stack<char>left,right;
        for(char ch : S){
            left.push(ch);
        }
        
        long long ans = 0;
        while(!left.empty()){
            char ch = left.top();
            left.pop();
            
            if(ch == 'p' && !left.empty() && left.top() == 'r') {
                ans+=Y;
                left.pop();
            }
            else if(ch == 'r' && !right.empty() && right.top() == 'p') {
                ans+=Y;
                right.pop();
            }
            else right.push(ch);
        }
        
        S = "";
        while(!right.empty()){
            S.push_back(right.top());
            right.pop();
        }
        return ans;
    }
    
    long long solve(int X,int Y,string S){
      if(X > Y) return removePR(X,S) + removeRP(Y,S);
      
      return removeRP(Y,S) + removePR(X,S);
    }
};


Solution 2 : 

class Solution{   
public:
    long long removePR(int X,string &S){
        stack<char>st;
        for(char ch : S){
            st.push(ch);
        }
        
        S = "";
        long long ans = 0;
        while(!st.empty()){
            char ch = st.top();
            st.pop();
            
            if(ch == 'r' && !st.empty() && st.top() == 'p') {
                ans += X;
                st.pop();
            }
            else if(ch == 'p' && S.back()=='r'){
                ans += X;
                S.pop_back();
            }
            else S.push_back(ch);
        }
        
        reverse(S.begin(),S.end());
        return ans;
    }
    long long removeRP(int Y,string &S){
        stack<char>st;
        for(char ch : S){
            st.push(ch);
        }
        
        S = "";
        long long ans = 0;
        while(!st.empty()){
            char ch = st.top();
            st.pop();
            
            if(ch == 'p' && !st.empty() && st.top() == 'r') {
                ans+=Y;
                st.pop();
            }
            else if(ch == 'r' && S.back() == 'p') {
                ans+=Y;
                S.pop_back();
            }
            else S.push_back(ch);
        }
        
        reverse(S.begin(),S.end());
        return ans;
    }
    
    long long solve(int X,int Y,string S){
      if(X > Y) return removePR(X,S) + removeRP(Y,S);
      
      return removeRP(Y,S) + removePR(X,S);
    }
};
