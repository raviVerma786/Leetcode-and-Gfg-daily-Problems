Question Link : https://leetcode.com/problems/jump-game-iv/description/

Solution : 

class Solution {
public:
    int minJumps(vector<int>& arr) {
        int n = arr.size();
        vector<bool> vis(n,false);
        unordered_map<int,vector<int>> indexes;
        
        for(int i=0;i<n;i++){
            indexes[arr[i]].push_back(i);
        }

        queue<pair<int,int>> q; //{idx,step}
        q.push({0,0});
        vis[0] = true;

        while(!q.empty()){
            int i = q.front().first , step = q.front().second;
            q.pop();
            
            if(i == n-1) return step;

            //conditions given in the question
            if(i-1 >= 0 && !vis[i-1]){
                q.push({i-1,step+1});
                vis[i-1]= true;
            }

            if(i+1 < n && !vis[i+1]){
                q.push({i+1,step + 1});
                vis[i+1] = true;
            }

            for(int idx : indexes[arr[i]]){
                if(!vis[idx]){
                    q.push({idx,step+1});
                    vis[idx] = true;
                }
            }

            indexes[arr[i]].clear();
        }

        return -1;
    }
};
