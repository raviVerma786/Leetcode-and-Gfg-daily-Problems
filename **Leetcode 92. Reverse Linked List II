Question Link : https://leetcode.com/problems/reverse-linked-list-ii/?envType=daily-question&envId=2023-09-07

Solution : 

class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(!head || !head->next || left == right) return head;
        
        ListNode* temp = new ListNode(-1);
        temp->next = head;

        ListNode* prev = temp,*curr = head;
        for(int i=0;i<(left-1);i++){
            prev = curr;
            curr = curr->next;
        }
        
        // cout<<prev->val<<" "<<curr->val<<endl;
        for(int i=0;i<(right - left);i++){
           ListNode* nextNode = curr->next;
           curr->next = nextNode->next;

           nextNode->next = prev->next;
           prev->next = nextNode;
        }
        
        return temp->next;
    }
};
