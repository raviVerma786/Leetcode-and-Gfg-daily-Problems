Question Link : https://practice.geeksforgeeks.org/problems/c239059f6d110e6778cc2f2a1ab58ffd0a3d64ca/1

Solution : 

class Solution {
  private: 
    int dp[101][101][101];
  public:
    int helper(int N,int K,int last){
        if(K==0 && N==0) return 1;
        else if(K<=0 || N<=0) return 0;
        
        if(dp[N][K][last] != -1) return dp[N][K][last];
        
        int ans = 0;
        for(int j=last;j<=N;j++){
            ans += helper(N-j,K-1,j);
        }
        
        return dp[N][K][last] = ans;
    }
    int countWaystoDivide(int N, int K) {
        memset(dp,-1,sizeof(dp));
        return helper(N,K,1);
    }
};
