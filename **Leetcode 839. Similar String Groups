Question Link : https://leetcode.com/problems/similar-string-groups/description/

Solution 1): 

class Solution {
private:
    bool isSimilar(string &s1,string &s2){
        int cnt = 0;
        for(int i=0;i<s1.size();i++){
            if(s1[i] != s2[i]) cnt++;
            if(cnt > 2) return false;
        }

        return true;
    }

    void dfs(vector<int>adj[],int i,vector<bool>&vis){
        
        vis[i] = true;
        for(int j : adj[i]){
            if(!vis[j]){
                dfs(adj,j,vis);
            }
        }
    }

public:
    int numSimilarGroups(vector<string>& strs) {
      int n = strs.size();
      vector<int> adj[n]; // we are making graph of indices on which strings are similar according ques
      for(int i=0;i<n;i++){
          for(int j=i+1;j<n;j++){
              if(isSimilar(strs[i],strs[j])) {
                  adj[i].push_back(j);
                  adj[j].push_back(i);
              }
          }
      }

      vector<bool> vis(n,false);
      int cnt = 0;
      for(int i=0;i<n;i++){
          if(!vis[i]){
              cnt++;
              dfs(adj,i,vis);
          }
      }

      return cnt;
    }
};

Solution 2):

