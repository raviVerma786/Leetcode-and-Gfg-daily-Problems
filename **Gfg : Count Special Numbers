Question Link : https://practice.geeksforgeeks.org/problems/3d49e4cce2820a813da02d1587c2dd9c542ce769/1

Solution : 

class Solution {
  public:
    int countSpecialNumbers(int n, vector<int> arr) {
        // Code here
        sort(arr.begin(),arr.end());
        int m=arr[n-1];
         
        unordered_map<int,int>mp;
        int ans=0;
        for(int i=0;i<n;i++){
            if(mp.find(arr[i])!=mp.end()){
                ans+=mp[arr[i]]+1;
                if(mp[arr[i]]==1){
                    mp[arr[i]]=0;
                }
                continue;
            }
            mp[arr[i]]=1;
            for(int x=arr[i]*2;x<=m;x+=arr[i]){
                mp[x]=0;
            }
        }
        return ans;
    }
};


Solution 2 : (Best Solution )

//https://www.youtube.com/watch?v=Pqy7ER66fg0&ab_channel=CodeSpeak
class Solution {
  public:
    int countSpecialNumbers(int N, vector<int> arr) {
        // Code here
        
        int mx=INT_MIN;
        for(int i=0;i<N; i++)
        {
            mx=max(mx,arr[i]);
        }
        vector<int>temp(mx+1,0);
        
        for(int i=0;i<N; i++)
        {
            if(temp[arr[i]]<=1)
            {
                for(int j=arr[i]; j<=mx; j+=arr[i])
                {
                    temp[j]++;
                }
            }
        }
        
        int count=0;
        for(int i=0;i<N; i++)
        {
            if(temp[arr[i]]>1)
            {
                count++;
            }
            
        }
        
        return count;
    }
};
