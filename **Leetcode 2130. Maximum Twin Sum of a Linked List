Question Link : https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/description/

Solution :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* getmid(ListNode* head){
        ListNode* slow = head;
        ListNode* fast = head->next;
        while(fast !=NULL && fast->next != NULL){
            slow = slow->next;
            fast= fast->next->next;
        }
        return slow;
}
    ListNode* reverse(ListNode* head){
        if(!head || !head->next) return head;
        ListNode* newHead = reverse(head->next);
        ListNode* temp = head->next;
        temp ->next = head;
        head ->next = NULL;
        return newHead;
    }
    int pairSum(ListNode* head) {
        ListNode* h1 = head;
        ListNode* mid = getmid(head);
        ListNode* h2 = mid->next;
        mid->next = NULL;
        h2 = reverse(h2);
        int ans =0;
        while(h1 || h2){
            ans = max(ans,h1->val + h2->val);
            h1 = h1->next;
            h2 = h2->next;
        }
        return ans;
    }
};
