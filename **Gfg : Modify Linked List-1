Question Link :https://practice.geeksforgeeks.org/problems/modify-linked-list-1-0546/1

Solution : 

class Solution{
    public:
    Node *divide_half(Node *head)
    {
        struct Node *slow=head,*fast=head->next;
        while(fast && fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
    Node *reverseList(Node *head)
    {
        if(!head || !head->next) return head;
            
        Node* newHead = reverseList(head->next);
        Node* temp = head->next;
        temp->next = head;
        head->next = NULL;
        
        return newHead;
    }
    struct Node* modifyTheList(struct Node *head)
    {
        struct Node *half=divide_half(head);
        Node *reverse=reverseList(half->next);
        half->next=NULL;
        struct Node *head1=head,*head2=reverse;
        
        while(head1 && head2){
            int data=head1->data;
            head1->data=head2->data-head1->data;
            head2->data=data;
            head1=head1->next;
            head2=head2->next;
        }
        reverse=reverseList(reverse);
        half->next=reverse;
        return head;
    }
};
