Question Link : https://leetcode.com/problems/maximum-subsequence-score/description/

Solution : 

class Solution {
    //codefreaks
public:
	long long maxScore(vector<int>& num1, vector<int>& num2, int k) {
		int n = num1.size();
        vector<pair<int,int>> num;
        for(int i=0;i<n;i++){
            num.push_back({num2[i],num1[i]});
        }
        
        sort(num.begin(),num.end());
        priority_queue<int,vector<int>,greater<int>> pq;
        long long sum = 0,ans = 0;

        for(int i=n-1;i>=0;i--){
            if(pq.size() == k){
                sum -= pq.top();
                pq.pop();
            }

            sum += num[i].second;
            pq.push(num[i].second);

            if(pq.size() == k){
                ans = max(ans,sum*num[i].first);
            }
        }

        return ans;
	}
};
