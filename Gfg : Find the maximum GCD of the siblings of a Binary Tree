Question Link : https://practice.geeksforgeeks.org/problems/6eb51dc638ee1b936f38d1ab4b2f7062d4425463/1

Solution : 

class Solution
{
private:
    int nodeWithMaxGcd = 0,maximumGcd = 0;
    
    int findMaxGcd(Node* root){
        if(!root) return 0;
        
        int ans = INT_MIN;
        if(root->left && root->right){
            ans = __gcd(root->left->data,root->right->data);
        }
        
        if(ans > maximumGcd){
            nodeWithMaxGcd = root->data;
            maximumGcd = ans;
        }
        else if(ans == maximumGcd) nodeWithMaxGcd = max(nodeWithMaxGcd,root->data);
        
        return max(ans,max(findMaxGcd(root->left),findMaxGcd(root->right)));
    }
    
public:
    int maxGCD( Node* root)
    {
        if(!root ||(!root->left && !root->right)) return -1;
        findMaxGcd(root);
        
        return nodeWithMaxGcd;
        
    }
};
