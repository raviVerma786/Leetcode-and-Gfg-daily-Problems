Question Link : https://leetcode.com/problems/total-cost-to-hire-k-workers/description/

Solution : 

class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int candidates) {
        int n = costs.size();
        int i=0,j=n-1;
        priority_queue<pair<int,pair<int,bool>>,vector<pair<int,pair<int,bool>>>,greater<pair<int,pair<int,bool>>>> pq; //{value,index,isfromleft}
        
        while(i<candidates){
            pq.push({costs[i],{i,true}});
            i++;
        }
        while(j>=(n - candidates) && j>=i){
            pq.push({costs[j],{j,false}});
            j--;
        }

        long long ans = 0;
        while(k--){
            int cost = pq.top().first, index = pq.top().second.first,
            isFromLeft = pq.top().second.second;
            pq.pop();

            ans += cost;

            if(i<=j){
                if(isFromLeft){
                    pq.push({costs[i],{i,true}});
                    i++;
                }
                else{
                    pq.push({costs[j],{j,false}});
                    j--;
                }
            }
        }

        return ans;
    }
};
