Question Link : https://leetcode.com/problems/minimum-path-sum/description/

Solution : 

class Solution {
public:
    int dp[205][205];
    int helper(vector<vector<int>>&grid,int i,int j){
        if(i==grid.size()-1 && j==grid[0].size()-1){
            return grid[i][j];
        }
        if(i>=grid.size() || j>=grid[0].size()) return INT_MAX/2;
        if(dp[i][j] != -1) return dp[i][j];
        return dp[i][j] = grid[i][j] + min(helper(grid,i+1,j),helper(grid,i,j+1));
    }
    int minPathSum(vector<vector<int>>& grid) {
        memset(dp,-1,sizeof(dp));
        return helper(grid,0,0);
    }
};
