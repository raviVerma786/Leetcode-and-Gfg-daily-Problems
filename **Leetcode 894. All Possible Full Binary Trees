Question Link : https://leetcode.com/problems/all-possible-full-binary-trees/description/

Solution : 

class Solution {
public:
    vector<TreeNode*> allPossibleFBT(int n) {
        if(n == 1){
           return {new TreeNode(0)};
        }

        vector<TreeNode*> ans;
        for(int i=1;i<n;i+=2){
            vector<TreeNode*> left = allPossibleFBT(i);
            vector<TreeNode*> right = allPossibleFBT(n - i - 1);

            for(TreeNode* l : left){
                for(TreeNode* r : right){
                    TreeNode* root = new TreeNode(0);
                    root->left = l;
                    root->right = r;
                    ans.push_back(root);
                }
            }
        }

        return ans;
    }
};
