Question Link : https://leetcode.com/problems/kth-largest-element-in-an-array/description/

solution :

class Solution {
private:
    // https://www.youtube.com/watch?v=BP7GCALO2v8&t=0s&ab_channel=Techdose

    int partition(vector<int>&arr,int low, int high){
        int pivot = low;
        int i = low,j=high;
    
        while(i<=j){
            while(i<=j && arr[i] <= arr[pivot]) i++;
            while(i<=j && arr[j] > arr[pivot]) j--;

            if(i<j){
                swap(arr[i],arr[j]);
            }
        }

        swap(arr[j], arr[pivot]);
        return j;
    }
    
    void quickSelect(vector<int>&arr,int K,int low,int high){
        if (low < high) {
            int pivot = partition(arr, low, high);
            if(pivot + 1 == K) return;
            else if(pivot + 1 > K){
                quickSelect(arr,K,low, pivot - 1);
            }else{
                quickSelect(arr,K,pivot + 1, high);
            }
        }
    }

public:
    int findKthLargest(vector<int>& arr, int K) {
        K = arr.size() - K + 1; //now its Kth smallest element to find
        quickSelect(arr,K,0,arr.size()-1);
        return arr[K-1];
    }
};
