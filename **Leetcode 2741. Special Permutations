Question Link : https://leetcode.com/contest/weekly-contest-350/problems/special-permutations/

Solution : 

//https://www.youtube.com/watch?v=mfOI5A8LVSI&ab_channel=PrakharAgrawal
class Solution {
public:
    int mod = 1e9 + 7;
    int helper(vector<int>&nums,int last,int i,vector<vector<int>>&dp,int mask){
        if(i == -1){
            return 1;
        }
        if(dp[last + 1][mask] != -1) return dp[last + 1][mask];
        
        int take = 0;
        for(int j=0;j<nums.size();j++){
            if((mask >> j)&1) continue;
            if(last == -1 || ((nums[last] % nums[j] == 0) || (nums[j] % nums[last] == 0))){
                mask = (mask | (1<<j));
                take = (take + helper(nums,j,i-1,dp,mask)) % mod;
                mask = (mask ^ (1<<j));
                
            }
        }
        
        return dp[last + 1][mask]= take % mod;
    }
    int specialPerm(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> dp(n+1,vector<int>((1<<(n+1)),-1));
        return helper(nums,-1,n-1,dp,0);
    }
};
