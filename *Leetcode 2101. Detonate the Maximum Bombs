Question Link : https://leetcode.com/problems/detonate-the-maximum-bombs/description/

Solution : 

class Solution {
private:
    long long distance(int x1,int y1,int x2,int y2){
        long long d = ((x1 - x2)*1LL*(x1 - x2)) + ((y1 - y2)*1LL*(y1 - y2));
        return d;
    }

    int maxBombDiffused(vector<vector<int>>&bombs,int i){
        int n = bombs.size();
        vector<bool> vis(n,false);

        queue<pair<int,pair<int,int>>> q; //{range,{x,y}}
        q.push({bombs[i][2],{bombs[i][0],bombs[i][1]}});
        vis[i] = true;
        
        int cnt = 0;
        while(!q.empty()){
            long long r = q.front().first;
            int x = q.front().second.first,y = q.front().second.second;
            q.pop();
            
            cnt++;
            for(int j=0;j<n;j++){
                if(!vis[j] && distance(x,y,bombs[j][0],bombs[j][1]) <= r*r){
                    q.push({bombs[j][2],{bombs[j][0],bombs[j][1]}});
                    vis[j] = true;
                }
            }
        }

        return cnt;
    }
public:
    int maximumDetonation(vector<vector<int>>& bombs) {
        int n = bombs.size();
        int cnt = 1;
        for(int i=0;i<n;i++){
            cnt = max(cnt,maxBombDiffused(bombs,i));
        }

        return cnt;
    }
};
