Question Link : https://leetcode.com/problems/number-of-provinces/description/

Solution : 

class Solution {
private:
    void dfs(vector<int>adj[],vector<bool>&vis,int i){
        vis[i] = true;
        for(int j : adj[i]){
            if(!vis[j]) dfs(adj,vis,j);
        }

    }
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size(), cnt = 0;
        
        //making adjoint matrix
        vector<int> adj[n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i!=j && isConnected[i][j] == 1) adj[i].push_back(j);
            }
        }
        
        //calculation
        vector<bool>vis(n,false);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                dfs(adj,vis,i);
                cnt++;
            }
        }

        return cnt;
    }
};
