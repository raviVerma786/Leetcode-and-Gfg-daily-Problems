Question link : https://practice.geeksforgeeks.org/problems/6cb0782855c0f11445b8d70e220f888e6ea8e22a/1

Solution: 
class Solution{
private:
    bool isPrime(int n){
        if(n <= 1) return false;
        if(n==2) return true;
        for(int i=2;i*i<=n;i++){
            if(n%i == 0) return false;
        }
        return true;
    }
    int nearestPrime(int n){
        // every interval of 10 has at least 1 prime number for safety i am taking interval of 20
        int ans = -1;
        for(int i=0;i<=20;i++){
            if(isPrime(n-i)){
                ans = n-i;
                break;
            }
            if(isPrime(n+i)){
                ans = n+i;
                break;
            }
        }
        
        return ans;
    }
    
public:
    Node *primeList(Node *head){
        Node* temp = head;
        while(temp){
            temp->val = nearestPrime(temp->val);
            temp = temp->next;
        }
        
        return head;
    }
};
