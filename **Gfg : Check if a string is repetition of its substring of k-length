class Solution{
public:
	
	int kSubstrConcat (int n, string s, int k)
	{
	    if(n%k) return 0;
	    unordered_map<string,int> mp;
	    
	    string str;
	    for(int i=0;i<n;i++){
	        if(i>0 && i%k == 0){
	            mp[str]++;
	            str = "";
	        }
	        
	        str += s[i];
	    }
	    
	    mp[str]++;
	    int x = (n/(2*k)) + (n/k)%2;
	    
	    for(pair<string,int>p : mp){
	       // cout<<p.first<<" "<<p.second<<endl;
	        if(p.second >= x) return true;
	    }
	    
	    return false;
	}
};
