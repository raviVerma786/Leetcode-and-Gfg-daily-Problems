Question Link : https://practice.geeksforgeeks.org/problems/51afa710a708c0681748445b509696dd588d5c40/1

Solution : 

class Solution
{
    //https://www.youtube.com/watch?v=PyCE2tUHl1I&ab_channel=CodeFreaks
  public:
  long long largestSumCycle(int N, vector<int> edge)
  {
    vector<int> count(N,0);
    for(int i : edge){
        if(i==-1) continue;
        count[i]++;
    }
    
    vector<bool> vis(N,false);
    queue<int> q;
    for(int i=0;i<N;i++){
        if(count[i]==0){
            q.push(i);
            vis[i] = true;
        }
    }
    
    while(!q.empty()){
        int curr = q.front();
        q.pop();
        
        int par = edge[curr];
        if(par == -1) continue;
        count[par]--;
        if(count[par] == 0){
            q.push(par);
            vis[par] = true;
        }
    }
    
    int ans = -1;
    for(int i=0;i<N;i++){
        if(vis[i]) continue;
        
        int cycleSum = 0;
        for(int j=i;!vis[j];j=edge[j]){
            cycleSum += j;
            vis[j] = true;
        }
        
        ans = max(ans,cycleSum);
    }
    
    return ans;
  }
};
