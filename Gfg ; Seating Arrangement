Question Link : https://practice.geeksforgeeks.org/problems/6bb49b563cc171335c6564b00307a6d867e0268d/1

Solution : 

class Solution{
    public:
    bool is_possible_to_get_seats(int n, int m, vector<int>& seats){
        if(n > m) return false;
        if(n==1 && m==1 && seats[0] == 0) return true;
        
        //starting point
        if(m > 1 && seats[0]==0 && seats[1]==0){
            seats[0] = 1;
            n--;
        }
        
        // middle points
        for(int i=1;i<(m-1);i++){
            if(seats[i]==0 && seats[i-1]==0 && seats[i+1]==0){
                seats[i] = 1;
                n--;
            }
            
        }
        
        //end point
         if(m > 1 && seats[m-1]==0 && seats[m-2]==0){
            seats[m-1] = 1;
            n--;
        }
        
        return n<=0;
    }
};
