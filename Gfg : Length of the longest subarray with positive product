Question Link :https://practice.geeksforgeeks.org/problems/4dfa8ba14d4c94f4d7637b6b5246782412f3aeb8/1

Solution : 

class Solution {
    public:
        int maxLength(vector<int> &arr,int n){
           //taking +ve as +1 and -ve as -1
           int mul = 1,len=0,ans = 0;
           
           //from left to right
           for(int i=0;i<n;i++){
               int num = (arr[i] > 0 ? 1 : (arr[i]==0 ? 0 : -1));
               mul *= num;
               len++;
               
               if(mul > 0){
                   ans = max(ans,len);
               }
               if(mul == 0){
                   len = 0;
                   mul = 1;
               }
               
           } 
           
           //now from right to left because [-1,2,3] each product gives -ve from left to right
           len=0;mul=1;
           for(int i=n-1;i>=0;i--){
              int num = (arr[i] > 0 ? 1 : (arr[i]==0 ? 0 : -1));
               mul *= num;
               len++;
               
               if(mul > 0){
                   ans = max(ans,len);
               }
               if(mul == 0){
                   len = 0;
                   mul = 1;
               }
           }
           
           return ans;
        }
};
