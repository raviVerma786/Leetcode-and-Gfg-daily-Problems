Question Link : https://practice.geeksforgeeks.org/problems/2145720aebf8ea0b07f76b17217b3353a0fbea7f/1

Solution 1 : space O(n*m) ,time O(n*m)

class Solution{   
public:
    bool isValid(int i,int j,int n,int m){
        return i>=0 && i<n && j>=0 && j<m;
    }
    
    int minIteration(int N, int M, int x, int y){    
        vector<vector<int>> v(N,vector<int>(M,0));
        v[x-1][y-1] = 1;
        
        queue<pair<int,pair<int,int>>> q;
        q.push({x-1,{y-1,0}});
        
        int dx[4] = {0,1,0,-1};
        int dy[4] = {1,0,-1,0};
        int ans = 0;
        
        while(!q.empty()){
            int r=q.front().first,c=q.front().second.first,step=q.front().second.second;
            q.pop();
            
            ans = max(ans,step);
            
            for(int i=0;i<4;i++){
                int row = r + dx[i] , col = c + dy[i];
                if(isValid(row,col,N,M) && v[row][col] == 0){
                    v[row][col] = 1;
                    q.push({row,{col,step+1}});
                }
            }
        }
        
        return ans;
    } 
};
