Question Link : https://practice.geeksforgeeks.org/problems/00ae30d0e0f6d8877c68f8b8558c5b0138fdb4b7/1

Solution :

class Solution 
{
    public:
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        map<int,vector<int>> mp;
        for(int i=0;i<n;i++)
        {  
            mp[arr[i].dead].push_back(arr[i].profit);
        }
        
        priority_queue<int> pq;
        auto cur = --mp.end();
        int mxdeadline = cur->first;
        
        int pft=0,cnt=0;
        while(mxdeadline)
        {  
            for(int x: mp[mxdeadline]) pq.push(x);
            
            if(!pq.empty())
            { 
                pft += pq.top();
                pq.pop();
                cnt++;
            }
            
            mxdeadline--;
        }
        
        return {cnt,pft};
    } 
};
