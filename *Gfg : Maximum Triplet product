Question Link : https://practice.geeksforgeeks.org/problems/d54c71dc974b7db3a200eb63f34e3d1cba955d86/1

Solution : O(nlogn) time

class Solution {
  public:
    long long maxTripletProduct(long long arr[], int n)
    {
    	sort(arr,arr + n);
    	return max(arr[0]*arr[1]*arr[n-1],arr[n-1]*arr[n-2]*arr[n-3]);
    }
};

Solution 2 : O(n) solution

class Solution {
  https://www.youtube.com/watch?v=NYzAm7nhpdk&ab_channel=CodeSpeak
  public:
    long long maxTripletProduct(long long arr[], int n)
    {
      // Complete the function
      long long firstmax=LONG_MIN;
      long long secondmax=LONG_MIN;
      long long thirdmax=LONG_MIN;
      
      long long firstmin=LONG_MAX;
      long long secondmin=LONG_MAX;
      
      for(int i=0;i<n; i++)
      {
          if(arr[i]>=firstmax)
          {
              thirdmax=secondmax;
              secondmax=firstmax;
              firstmax=arr[i];
              
          }
          else if(arr[i]>=secondmax)
          {
              thirdmax=secondmax;
              secondmax=arr[i];
          }
          else if(arr[i]>=thirdmax)
          {
              thirdmax=arr[i];
          }
          
          
          if(arr[i]<=firstmin)
          {
              secondmin=firstmin;
              firstmin=arr[i];
          }
          else if(arr[i]<=secondmin)
          {
              secondmin=arr[i];
          }
          
      }
      
      
      return max(firstmax*secondmax*thirdmax, firstmin*secondmin*firstmax);
    }
};
